{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:48594"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:48606"}
{"level":"info","message":"22:44 WIB | 200 | 768.349µs | GET | /"}
{"level":"info","message":"22:44 WIB | 404 | 114.048µs | GET | /favicon.ico"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:41870"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:41872"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:38684"}
{"level":"info","message":"22:45 WIB | 200 | 51.781136ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:43 (0x1608ee4)\n\t(*ServiceServer).AuthLogin: \"access_token\":   token.Token,\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b695)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b55d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b109)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee27c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ab44)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x1636f3e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f4141)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:42694"}
{"level":"info","message":"22:46 WIB | 200 | 54.231266ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x160795d)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171a095)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x1719f5d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x1719b09)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ed91c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1609544)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163593e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f2b41)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"22:46 WIB | 200 | 49.246383ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x160795d)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171a095)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x1719f5d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x1719b09)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ed91c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1609544)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163593e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f2b41)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"22:46 WIB | 200 | 51.493132ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x160795d)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171a095)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x1719f5d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x1719b09)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ed91c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1609544)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163593e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f2b41)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:46086"}
{"level":"info","message":"22:47 WIB | 200 | 52.832155ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:43 (0x1608f44)\n\t(*ServiceServer).AuthLogin: \"access_token\":   token.Token,\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b6f5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b5bd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b169)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee27c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160aba4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x1636f9e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f41a1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:42516"}
{"level":"info","message":"22:48 WIB | 200 | 53.733026ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:43 (0x1609004)\n\t(*ServiceServer).AuthLogin: \"access_token\":   token.Token,\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b7b5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b67d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b229)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee27c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ac64)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163705e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f4261)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:38280"}
{"level":"info","message":"22:48 WIB | 200 | 54.060395ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:43 (0x1609044)\n\t(*ServiceServer).AuthLogin: \"access_token\":   token.Token,\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b7f5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b6bd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b269)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee27c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160aca4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163709e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f42a1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:45442"}
{"level":"info","message":"22:53 WIB | 200 | 55.379958ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x1608f2c)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b655)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b51d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b0c9)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ab04)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x1636efe)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f4101)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"22:53 WIB | 200 | 49.547147ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x1608f2c)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b655)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b51d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b0c9)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ab04)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x1636efe)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f4101)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"22:53 WIB | 200 | 51.094876ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x1608f2c)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b655)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b51d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b0c9)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ab04)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x1636efe)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f4101)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:49496"}
{"level":"info","message":"22:53 WIB | 200 | 69.66188ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x1608f8c)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b6b5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b57d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b129)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ab64)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x1636f5e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f4161)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:57088"}
{"level":"info","message":"22:54 WIB | 200 | 54.129936ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x1608fac)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b6d5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b59d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b149)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ab84)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x1636f7e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f4181)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:44710"}
{"level":"info","message":"22:56 WIB | 200 | 53.909124ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x160908c)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b7b5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b67d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b229)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ac64)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163705e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f4261)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:50368"}
{"level":"info","message":"22:58 WIB | 200 | 52.946729ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x16090cc)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b7f5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b6bd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b269)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160aca4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163709e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f42a1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:41048"}
{"level":"info","message":"22:58 WIB | 200 | 53.235833ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x16090cc)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b7f5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b6bd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b269)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160aca4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163709e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f42a1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:53978"}
{"level":"info","message":"22:59 WIB | 200 | 51.927999ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x160920c)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b935)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b7fd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b3a9)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ade4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x16371de)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f43e1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:44576"}
{"level":"info","message":"23:00 WIB | 200 | 53.453455ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x16092ac)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b9d5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b89d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b449)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160ae84)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163727e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f4481)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:58624"}
{"level":"info","message":"23:01 WIB | 200 | 53.061781ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x16092cc)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b9f5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b8bd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b469)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160aea4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163729e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f44a1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:52020"}
{"level":"info","message":"23:02 WIB | 200 | 57.146667ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:42422"}
{"level":"info","message":"23:03 WIB | 500 | 69.709886ms | POST | /auth/login"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:53340"}
{"level":"info","message":"23:03 WIB | 200 | 57.726925ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: [Recovery] err=runtime error: invalid memory address or nil pointer dereference\nstack=/usr/lib/go/src/runtime/panic.go:261 (0x455817)\n\tpanicmem: panic(memoryError)\n/usr/lib/go/src/runtime/signal_unix.go:881 (0x4557e5)\n\tsigpanic: panicmem()\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_login.go:44 (0x16092cc)\n\t(*ServiceServer).AuthLogin: \"access_expired\": token.Expired.Time.Local(),\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x171b9f5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x171b8bd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x171b469)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15ee21c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x160aea4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155be4e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163729e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16f44a1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:42022"}
{"level":"info","message":"23:06 WIB | 400 | 54.510296ms | POST | /auth/login"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:53888"}
{"level":"info","message":"23:07 WIB | 400 | 52.99642ms | POST | /auth/login"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:34482"}
{"level":"info","message":"23:08 WIB | 400 | 844.837µs | POST | /auth/login"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:49448"}
{"level":"info","message":"23:08 WIB | 400 | 4.680318ms | POST | /auth/login"}
{"level":"info","message":"23:08 WIB | 400 | 663.876µs | POST | /auth/login"}
{"level":"info","message":"23:09 WIB | 400 | 9.271407ms | POST | /auth/login"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:32982"}
{"level":"info","message":"23:20 WIB | 400 | 4.250992ms | POST | /auth/login"}
{"level":"info","message":"23:20 WIB | 400 | 611.653µs | POST | /auth/login"}
{"level":"info","message":"23:20 WIB | 200 | 52.667561ms | POST | /auth/login"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:51530"}
{"level":"info","message":"23:22 WIB | 200 | 54.081517ms | POST | /auth/login"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:43194"}
{"level":"info","message":"23:23 WIB | 200 | 60.470906ms | POST | /auth/login"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:41858"}
{"level":"info","message":"23:25 WIB | 200 | 59.208455ms | POST | /auth/login"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=6 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=6 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"error","message":"HERTZ: Error=remote error: tls: unknown certificate, remoteAddr=127.0.0.1:38298"}
{"level":"info","message":"23:27 WIB | 200 | 53.627296ms | POST | /auth/login"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
