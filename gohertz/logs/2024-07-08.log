{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:13 WIB | 401 | 84.562µs | GET | /auth/me"}
{"level":"info","message":"08:14 WIB | 200 | 61.191988ms | POST | /auth/login"}
{"level":"info","message":"08:14 WIB | 200 | 1.835206ms | GET | /auth/me"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:15 WIB | 200 | 3.701461ms | GET | /auth/me"}
{"level":"info","message":"08:15 WIB | 200 | 765.944µs | GET | /auth/me"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:18 WIB | 200 | 2.899382ms | GET | /auth/me"}
{"level":"info","message":"08:18 WIB | 200 | 55.74723ms | POST | /auth/login"}
{"level":"info","message":"08:18 WIB | 401 | 309.449µs | GET | /auth/me"}
{"level":"info","message":"08:21 WIB | 200 | 568.325µs | GET | /auth/me"}
{"level":"info","message":"08:21 WIB | 404 | 19.322µs | POST | /auth/refresh"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:21 WIB | 404 | 25.89µs | POST | /auth/refresh"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:22 WIB | 200 | 2.923365ms | POST | /auth/refresh"}
{"level":"info","message":"08:22 WIB | 401 | 287.238µs | GET | /auth/me"}
{"level":"info","message":"08:22 WIB | 200 | 2.686402ms | GET | /auth/me"}
{"level":"info","message":"08:22 WIB | 200 | 343.874µs | POST | /auth/refresh"}
{"level":"error","message":"HERTZ: [Recovery] err=message \"\" not found in language \"id\"\nstack=/home/riyan/go/pkg/mod/github.com/nicksnyder/go-i18n/v2@v2.4.0/i18n/localizer.go:235 (0x1571350)\n\t(*Localizer).MustLocalize: panic(err)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:45 (0x1574f57)\n\tLocalize: return i18Localizer.MustLocalize(&i18n.LocalizeConfig{\n/home/riyan/Data/Learn/Golang/gohertz/util/response.go:77 (0x1601566)\n\t(*responseStruct).Error: message = infrastructure.Localize(localizeResponseCode[code])\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_refresh.go:37 (0x161007e)\n\t(*ServiceServer).AuthRefresh: util.NewResponse(c).Error(err.Errors, err.Message, err.StatusCode)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x1722855)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x172271d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x17222c9)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15f115c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611884)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611884)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163dc7e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16fb2c1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"08:22 WIB | 200 | 344.482µs | POST | /auth/refresh"}
{"level":"error","message":"HERTZ: [Recovery] err=message \"\" not found in language \"id\"\nstack=/home/riyan/go/pkg/mod/github.com/nicksnyder/go-i18n/v2@v2.4.0/i18n/localizer.go:235 (0x1571350)\n\t(*Localizer).MustLocalize: panic(err)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:45 (0x1574f57)\n\tLocalize: return i18Localizer.MustLocalize(&i18n.LocalizeConfig{\n/home/riyan/Data/Learn/Golang/gohertz/util/response.go:77 (0x1601566)\n\t(*responseStruct).Error: message = infrastructure.Localize(localizeResponseCode[code])\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_refresh.go:37 (0x161007e)\n\t(*ServiceServer).AuthRefresh: util.NewResponse(c).Error(err.Errors, err.Message, err.StatusCode)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x1722855)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x172271d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x17222c9)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15f115c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611884)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611884)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163dc7e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16fb2c1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:24 WIB | 200 | 2.18374ms | POST | /auth/refresh"}
{"level":"error","message":"HERTZ: [Recovery] err=message \"\" not found in language \"id\"\nstack=/home/riyan/go/pkg/mod/github.com/nicksnyder/go-i18n/v2@v2.4.0/i18n/localizer.go:235 (0x1571350)\n\t(*Localizer).MustLocalize: panic(err)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:45 (0x1574f57)\n\tLocalize: return i18Localizer.MustLocalize(&i18n.LocalizeConfig{\n/home/riyan/Data/Learn/Golang/gohertz/util/response.go:77 (0x1601566)\n\t(*responseStruct).Error: message = infrastructure.Localize(localizeResponseCode[code])\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_refresh.go:37 (0x16101fe)\n\t(*ServiceServer).AuthRefresh: util.NewResponse(c).Error(err.Errors, err.Message, err.StatusCode)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x17229d5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x172289d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x1722449)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15f115c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611a04)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611a04)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163ddfe)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16fb441)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:25 WIB | 200 | 1.819882ms | POST | /auth/refresh"}
{"level":"error","message":"HERTZ: [Recovery] err=message \"\" not found in language \"id\"\nstack=/home/riyan/go/pkg/mod/github.com/nicksnyder/go-i18n/v2@v2.4.0/i18n/localizer.go:235 (0x1571350)\n\t(*Localizer).MustLocalize: panic(err)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:45 (0x1574f57)\n\tLocalize: return i18Localizer.MustLocalize(&i18n.LocalizeConfig{\n/home/riyan/Data/Learn/Golang/gohertz/util/response.go:77 (0x1601566)\n\t(*responseStruct).Error: message = infrastructure.Localize(localizeResponseCode[code])\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_refresh.go:37 (0x161039e)\n\t(*ServiceServer).AuthRefresh: util.NewResponse(c).Error(err.Errors, err.Message, err.StatusCode)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x1722b75)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x1722a3d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x17225e9)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15f115c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611ba4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611ba4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163df9e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16fb5e1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:25 WIB | 200 | 2.01759ms | POST | /auth/refresh"}
{"level":"error","message":"HERTZ: [Recovery] err=message \"\" not found in language \"id\"\nstack=/home/riyan/go/pkg/mod/github.com/nicksnyder/go-i18n/v2@v2.4.0/i18n/localizer.go:235 (0x1571350)\n\t(*Localizer).MustLocalize: panic(err)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:45 (0x1574f57)\n\tLocalize: return i18Localizer.MustLocalize(&i18n.LocalizeConfig{\n/home/riyan/Data/Learn/Golang/gohertz/util/response.go:77 (0x1601566)\n\t(*responseStruct).Error: message = infrastructure.Localize(localizeResponseCode[code])\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_refresh.go:37 (0x161041e)\n\t(*ServiceServer).AuthRefresh: util.NewResponse(c).Error(err.Errors, err.Message, err.StatusCode)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x1722bf5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x1722abd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x1722669)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15f115c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611c24)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611c24)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163e01e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16fb661)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:26 WIB | 200 | 2.036745ms | POST | /auth/refresh"}
{"level":"error","message":"HERTZ: [Recovery] err=message \"\" not found in language \"id\"\nstack=/home/riyan/go/pkg/mod/github.com/nicksnyder/go-i18n/v2@v2.4.0/i18n/localizer.go:235 (0x1571350)\n\t(*Localizer).MustLocalize: panic(err)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:45 (0x1574f57)\n\tLocalize: return i18Localizer.MustLocalize(&i18n.LocalizeConfig{\n/home/riyan/Data/Learn/Golang/gohertz/util/response.go:77 (0x1601566)\n\t(*responseStruct).Error: message = infrastructure.Localize(localizeResponseCode[code])\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_refresh.go:37 (0x161045e)\n\t(*ServiceServer).AuthRefresh: util.NewResponse(c).Error(err.Errors, err.Message, err.StatusCode)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x1722c35)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x1722afd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x17226a9)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15f115c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611c64)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611c64)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163e05e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16fb6a1)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:26 WIB | 200 | 2.211296ms | POST | /auth/refresh"}
{"level":"error","message":"HERTZ: [Recovery] err=message \"\" not found in language \"id\"\nstack=/home/riyan/go/pkg/mod/github.com/nicksnyder/go-i18n/v2@v2.4.0/i18n/localizer.go:235 (0x1571350)\n\t(*Localizer).MustLocalize: panic(err)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:45 (0x1574f57)\n\tLocalize: return i18Localizer.MustLocalize(&i18n.LocalizeConfig{\n/home/riyan/Data/Learn/Golang/gohertz/util/response.go:77 (0x1601566)\n\t(*responseStruct).Error: message = infrastructure.Localize(localizeResponseCode[code])\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_refresh.go:37 (0x16104de)\n\t(*ServiceServer).AuthRefresh: util.NewResponse(c).Error(err.Errors, err.Message, err.StatusCode)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x1722cb5)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x1722b7d)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x1722729)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15f115c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611ce4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611ce4)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163e0de)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16fb721)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:27 WIB | 200 | 1.42607ms | POST | /auth/refresh"}
{"level":"error","message":"HERTZ: [Recovery] err=message \"\" not found in language \"id\"\nstack=/home/riyan/go/pkg/mod/github.com/nicksnyder/go-i18n/v2@v2.4.0/i18n/localizer.go:235 (0x1571350)\n\t(*Localizer).MustLocalize: panic(err)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:45 (0x1574f57)\n\tLocalize: return i18Localizer.MustLocalize(&i18n.LocalizeConfig{\n/home/riyan/Data/Learn/Golang/gohertz/util/response.go:77 (0x1601566)\n\t(*responseStruct).Error: message = infrastructure.Localize(localizeResponseCode[code])\n/home/riyan/Data/Learn/Golang/gohertz/internal/api/auth_refresh.go:38 (0x1610545)\n\t(*ServiceServer).AuthRefresh: util.NewResponse(c).Error(err.Errors, err.Message, err.StatusCode)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/infrastructure/localizer.go:38 (0x1722d15)\n\tmain.LocalizerMiddleware.func8: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/limiter.go:20 (0x1722bdd)\n\tmain.Limiter.func7: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/Data/Learn/Golang/gohertz/middleware/logger.go:27 (0x1722789)\n\tmain.Logger.func6: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/requestid@v1.1.0/requestid.go:61 (0x15f115c)\n\tNew.func2: c.Next(ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611d44)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/middlewares/server/recovery/recovery.go:50 (0x1611d44)\n\tRecovery.func1: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/app/context.go:822 (0x155bf0e)\n\t(*RequestContext).Next: ctx.handlers[ctx.index](c, ctx)\n/home/riyan/go/pkg/mod/github.com/cloudwego/hertz@v0.9.1/pkg/route/engine.go:765 (0x163e13e)\n\t(*Engine).ServeHTTP: ctx.Next(c)\n/home/riyan/go/pkg/mod/github.com/hertz-contrib/http2@v0.1.8/server.go:1940 (0x16fb781)\n\t(*serverConn).runHandler: handler(rw.rws.stream.baseCtx, reqCtx)\n/usr/lib/go/src/runtime/asm_amd64.s:1695 (0x472f40)\n\tgoexit: BYTE\t$0x90\t// NOP\n"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:29 WIB | 401 | 2.053007ms | POST | /auth/refresh"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:30 WIB | 401 | 3.114547ms | POST | /auth/refresh"}
{"level":"info","message":"08:30 WIB | 401 | 342.991µs | POST | /auth/refresh"}
{"level":"info","message":"08:30 WIB | 401 | 445.813µs | POST | /auth/refresh"}
{"level":"info","message":"08:30 WIB | 401 | 407.507µs | POST | /auth/refresh"}
{"level":"info","message":"08:30 WIB | 401 | 452.17µs | POST | /auth/refresh"}
{"level":"info","message":"08:31 WIB | 200 | 2.128791ms | POST | /auth/refresh"}
{"level":"info","message":"08:31 WIB | 200 | 2.49703ms | GET | /auth/me"}
{"level":"info","message":"08:31 WIB | 400 | 46.224µs | GET | /auth/me"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks timeout: error=context deadline exceeded"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:32 WIB | 400 | 1.036619ms | GET | /auth/me"}
{"level":"info","message":"08:33 WIB | 401 | 30.34µs | GET | /auth/me"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:33 WIB | 401 | 47.691µs | GET | /auth/me"}
{"level":"info","message":"08:33 WIB | 401 | 47.903µs | GET | /auth/me"}
{"level":"info","message":"08:33 WIB | 400 | 1.095138ms | GET | /auth/me"}
{"level":"info","message":"08:33 WIB | 400 | 40.918µs | GET | /auth/me"}
{"level":"info","message":"08:33 WIB | 400 | 41.177µs | GET | /auth/me"}
{"level":"info","message":"08:33 WIB | 400 | 40.191µs | GET | /auth/me"}
{"level":"info","message":"08:34 WIB | 400 | 49.216µs | GET | /auth/me"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/ping                     --> handlerName=main.PingHandler (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/docs/*any                --> handlerName=github.com/hertz-contrib/swagger.CustomWrapHandler.func1 (num=2 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/                         --> handlerName=gohertz/internal/api.(*ServiceServer).Index-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/register            --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRegister-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/login               --> handlerName=gohertz/internal/api.(*ServiceServer).AuthLogin-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=POST   absolutePath=/auth/refresh             --> handlerName=gohertz/internal/api.(*ServiceServer).AuthRefresh-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/auth/me                  --> handlerName=gohertz/internal/api.(*ServiceServer).AuthMe-fm (num=8 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/                 --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleList-fm (num=7 handlers)"}
{"level":"debug","message":"HERTZ: Method=GET    absolutePath=/example/:id              --> handlerName=gohertz/internal/api.(*ServiceServer).ExampleDetail-fm (num=7 handlers)"}
{"level":"info","message":"HERTZ: Using network library=standard"}
{"level":"info","message":"HERTZ: HTTP server listening on address=[::]:3000"}
{"level":"info","message":"08:35 WIB | 401 | 1.915093ms | GET | /auth/me"}
{"level":"info","message":"HERTZ: Received signal: interrupt\n"}
{"level":"info","message":"HERTZ: Begin graceful shutdown, wait at most num=5 seconds..."}
{"level":"error","message":"HERTZ: Error=accept tcp [::]:3000: use of closed network connection"}
{"level":"info","message":"HERTZ: Execute OnShutdownHooks finish"}
